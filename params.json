{"name":"Скорость загрузки сайта","tagline":"клиентская оптимизация","body":"Скорость загрузки сайта напрямую влияет на следующее:\r\n#### Результаты в поисковой выдаче\r\nЧем сайт быстрее грузится, тем большее предпочтение ему отдаст поисковик при ранжировании.\r\n#### Удобство использования\r\nГораздо приятнее пользоваться сайтом, который работает быстро и без задержек\r\n#### Удобство мобильных пользователей\r\nХочу выделать отдельно, поскольку число мобильных пользователей постоянно растет и им следует уделить особое внимание. Учитывая, что скорость мобильного интернета в среднем ниже, чем больше мы сможем ускорить сайт, тем более благодарны нам будут за это пользователи мобильных устройств.\r\n\r\nВ данной статье я опишу те пункты, которые сможет выполнить любой, даже начинающий веб-разработчик. Говорить мы будем именно о клиентской оптимизации.\r\n\r\n### Что будем оптимизировать?\r\nПри загрузке сайта, браузер пользователя отправляет на сервер множество запросов. Например, на получение CSS, JavaScript, картинок. Каждый запрос отдельно обрабатывается веб-сервером, а именно для каждого запроса открывается соединение, затем идет передача данных и закрытие соединения. Соответственно, если у нас 10 файлов CSS, указанных в нашем html-документе через тег `link` то для каждого из них будет создан отдельный запрос, на который затрачивается время. \r\nИногда даже встречаются случаи, когда запрашивается файл небольшого объема, и тогда, время на установление соединения больше чем время на его передачу.\r\nСоответственно, нужно уменьшать число запросов.\r\n\r\nТакже, большую роль играет объём передаваемых данных. Всем ясно, что передать по сети 1 мегабайт и 100 килобайт — разные вещи.\r\n\r\nСогласно этому, можно выделить две основные задачи для клиентской оптимизации скорости загрузки сайта:\r\n1. Уменьшение числа запросов к веб-серверу\r\n2. Уменьшение объема передаваемых по сети данных\r\n\r\n### Уменьшение числа запросов\r\n\r\nДля уменьшение числа запросов нам нужно объединить CSS и JS файлы один, чтобы вместо 10-ти запросов, у нас был всего лишь один. Для этого можно воспользоваться написанным мной классом: https://github.com/akirikovich/filecache.php.\r\n\r\nТакже, частая проблема — использование множества иконок (небольших картинок) в дизайне сайта. Когда мы указываем в CSS файле путь к картинке, для её получения также создается отдельный запрос. Для оптимизации этого момента, можно использовать технику спрайтов (sprites). Смысл состоит в том, что необходимо собрать все картинки воедино в один большой файл, а в CSS перемещаться по нему с помощью свойства `background-position`. \r\n\r\n### Уменьшение объёма данных\r\nМы имеем возможность архивировать информацию, которая передается от сервера клиенту. Т.е. сервер архивирует файл, затем передаёт уже уменьшенный по размеру архив, браузер получает этот архив и распаковывает его.\r\n\r\nПример кода для настройки модуля gzip для веб-сервера apache\r\n```\r\n<IfModule mod_gzip.c>\r\n\tmod_gzip_on         Yes\r\n\tmod_gzip_dechunk    Yes\r\n\tmod_gzip_item_include file\t\t\\.(html?|txt|css|js|php|pl)$\r\n\tmod_gzip_item_include mime\t\t^text\\.*\r\n\tmod_gzip_item_include mime\t\t^application/x-javascript.*\r\n\tmod_gzip_item_include mime\t\t^application/x-font-woff.*\r\n\tmod_gzip_item_exclude mime\t\t^image\\.*\r\n\tmod_gzip_item_exclude rspheader\t^Content-Encoding:.*gzip.*\r\n</IfModule>\r\n<ifModule mod_deflate.c>\r\n\tAddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml application/xhtml+xml text/css text/javascript application/javascript application/x-javascript application/x-font-woff image/jpg image/jpeg\r\n</ifModule>\r\n```\r\nЭтот код нужно поместить в файл .htaccess в корне сайта.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}